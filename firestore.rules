rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isValidUserProfile() {
      return request.resource.data.keys().hasAll([
        'address', 'joinDate', 'lastActive', 'tier', 'totalPoints', 
        'currentRank', 'totalTransactions', 'ptradoorBalance', 
        'ptradoorEarned', 'weeklyStreak', 'referrals', 'achievements'
      ]);
    }
    
    function isValidTransaction() {
      return request.resource.data.keys().hasAll([
        'userAddress', 'type', 'amount', 'points', 'status', 'timestamp'
      ]);
    }
    
    function isValidAchievement() {
      return request.resource.data.keys().hasAll([
        'name', 'description', 'icon', 'rarity', 'requirements', 
        'pointsReward', 'isActive'
      ]);
    }

    // User profiles - READ ONLY from client, writes handled by backend
    match /users/{userId} {
      allow read: if true; // Allow reading user profiles for leaderboard
      allow write: if false; // No direct writes from client
    }

    // Transactions - READ ONLY from client, writes handled by backend
    match /transactions/{transactionId} {
      allow read: if true; // Allow reading transactions
      allow write: if false; // No direct writes from client
    }

    // User achievements - READ ONLY from client, writes handled by backend
    match /userAchievements/{achievementId} {
      allow read: if true; // Allow reading achievements
      allow write: if false; // No direct writes from client
    }

    // Achievements - READ ONLY from client, writes handled by backend
    match /achievements/{achievementId} {
      allow read: if true; // Allow reading achievements
      allow write: if false; // No direct writes from client
    }

    // Leaderboard - READ ONLY from client, writes handled by backend
    match /leaderboard/{entry} {
      allow read: if true; // Allow reading leaderboard
      allow write: if false; // No direct writes from client
    }

    // Platform stats - READ ONLY from client, writes handled by backend
    match /platformStats/{doc} {
      allow read: if true; // Allow reading platform stats
      allow write: if false; // No direct writes from client
    }

    // Milestones - READ ONLY from client, writes handled by backend
    match /milestones/{milestoneId} {
      allow read: if true; // Allow reading milestones
      allow write: if false; // No direct writes from client
    }

    // System collections - READ ONLY from client, writes handled by backend
    match /system/{doc} {
      allow read: if true; // Allow reading system data
      allow write: if false; // No direct writes from client
    }
  }
} 